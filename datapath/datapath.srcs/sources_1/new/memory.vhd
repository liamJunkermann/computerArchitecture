----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 12/31/2020 12:02:43 PM
-- Design Name: 
-- Module Name: memory - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.std_logic_arith.all;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity memory is
    Port ( 
        address: in std_logic_vector(31 downto 0);
        write_data: in std_logic_vector(31 downto 0);
        MemWrite: in std_logic;
        read_data: out std_logic_vector(31 downto 0)
    );
end memory;

architecture Behavioral of memory is
    type mem_array is array(0 to 511) of std_logic_vector(31 downto 0);
begin
    mem_proc: process(address, write_data)
    
        variable data_mem : mem_array := (
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000",
            x"00000", x"00000", x"00000", x"00000"
            
        );
        variable addr : integer;
        
    begin
        addr :=conv_integer(address(2 downto 0));
        if MemWrite = '1' then
            data_mem(addr) := write_data;
       else
            read_data <= data_mem(addr) after 10ns;
        end if;
    end process;
end Behavioral;
