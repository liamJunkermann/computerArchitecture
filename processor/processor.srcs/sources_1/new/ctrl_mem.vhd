----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 01/01/2021 03:37:18 PM
-- Design Name: 
-- Module Name: ctrl_mem - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

ENTITY ctrl_mem IS
  PORT (
    car_in : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
    next_addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    muxs_ctrl : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
    func_sel : OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
    muxc_ctrl, instruct_ld, pc_inc, pc_ld, temp_d, temp_a, temp_b, muxb_ctrl : OUT STD_LOGIC;
    muxd_ctrl, read_write, muxm_ctrl, mem_write, reset_v, reset_c, reset_n, reset_z, flag_load : OUT STD_LOGIC
  );
END ctrl_mem;

ARCHITECTURE Behavioral OF ctrl_mem IS

  TYPE mem_array IS ARRAY(0 TO 255) OF STD_LOGIC_VECTOR(41 DOWNTO 0);

BEGIN
  ctrl_mem : PROCESS (car_in)
    VARIABLE control_mem : mem_array := (
      "000000000110000000010000000100010010000001", -- 0x00 - ADI : Add Immediate
      "000000000110000000010000000000000110000000", -- 0x01 - LD  : Load 
      "000000000110000000010000000000000000100000", -- 0x02 - ST  : Store
      "000000000110000000010000000000001010000000", -- 0x03 - INC : Increment
      "000000000110000000010000000001110010000000", -- 0x04 - NOT : Not
      "000000000110000000010000000000010010011111", -- 0x05 - ADD : Add
      "000000000100001100010000000000000110000000", -- 0x06 - LRI : Load Immediate Reg
      "000000000100001111110000100000000010011111", -- 0x07 - SR  : Shift Right
      "000000000110000000010000000000000000000000", -- 0x08 - Catch
      "000000000001100001000001111010000010011111", -- 0x09 - BEQ : Branch if Equal
      "000000000110000000010000000000000000000000", -- 0x0a - Catch
      "000000000001100000010000000000000000011111", -- 0x0b - BNZ : Branch Not Zero
      "000000000110000000010000000000000000000000", -- 0x0c - Catch
      "000000000110000000010000100000101010000000", -- 0x0d - CMP : Compare
      "000000000000000000000000000000000000000000", -- 0x0e
      "000000000000000000000000000000000000000000", -- 0x0f

      "000000000000000000000000000000000000000000", -- 0x10
      "000000000000000000000000000000000000000000", -- 0x11
      "000000000000000000000000000000000000000000", -- 0x12
      "000000000000000000000000000000000000000000", -- 0x13
      "000000000000000000000000000000000000000000", -- 0x14
      "000000000000000000000000000000000000000000", -- 0x15
      "000000000000000000000000000000000000000000", -- 0x16
      "000000000000000000000000000000000000000000", -- 0x17
      "000000000000000000000000000000000000000000", -- 0x18
      "000000000000000000000000000000000000000000", -- 0x19
      "000000000000000000000000000000000000000000", -- 0x1a
      "000000000000000000000000000000000000000000", -- 0x1b
      "000000000000000000000000000000000000000000", -- 0x1c
      "000000000000000000000000000000000000000000", -- 0x1d
      "000000000000000000000000000000000000000000", -- 0x1e
      "000000000000000000000000000000000000000000", -- 0x1f

      "000000000000000000000000000000000000000000", -- 0x20
      "000000000000000000000000000000000000000000", -- 0x21
      "000000000000000000000000000000000000000000", -- 0x22
      "000000000000000000000000000000000000000000", -- 0x23
      "000000000000000000000000000000000000000000", -- 0x24
      "000000000000000000000000000000000000000000", -- 0x25
      "000000000000000000000000000000000000000000", -- 0x26
      "000000000000000000000000000000000000000000", -- 0x27
      "000000000000000000000000000000000000000000", -- 0x28
      "000000000000000000000000000000000000000000", -- 0x29
      "000000000000000000000000000000000000000000", -- 0x2a
      "000000000000000000000000000000000000000000", -- 0x2b
      "000000000000000000000000000000000000000000", -- 0x2c
      "000000000000000000000000000000000000000000", -- 0x2d
      "000000000000000000000000000000000000000000", -- 0x2e
      "000000000000000000000000000000000000000000", -- 0x2f

      "000000000110000000010001000000000000000000", -- 0x30 - B : Unconditional Branch
      "000000000000000000000000000000000000000000", -- 0x31
      "000000000000000000000000000000000000000000", -- 0x32
      "000000000000000000000000000000000000000000", -- 0x33
      "000000000000000000000000000000000000000000", -- 0x34
      "000000000000000000000000000000000000000000", -- 0x35
      "000000000000000000000000000000000000000000", -- 0x36
      "000000000000000000000000000000000000000000", -- 0x37
      "000000000000000000000000000000000000000000", -- 0x38
      "000000000000000000000000000000000000000000", -- 0x39
      "000000000000000000000000000000000000000000", -- 0x3a
      "000000000000000000000000000000000000000000", -- 0x3b
      "000000000000000000000000000000000000000000", -- 0x3c
      "000000000000000000000000000000000000000000", -- 0x3d
      "000000000000000000000000000000000000000000", -- 0x3e
      "000000000000000000000000000000000000000000", -- 0x3f

      "000000000000000000000000000000000000000000", -- 0x40
      "000000000000000000000000000000000000000000", -- 0x41
      "000000000000000000000000000000000000000000", -- 0x42
      "000000000000000000000000000000000000000000", -- 0x43
      "000000000000000000000000000000000000000000", -- 0x44
      "000000000000000000000000000000000000000000", -- 0x45
      "000000000000000000000000000000000000000000", -- 0x46
      "000000000000000000000000000000000000000000", -- 0x47
      "000000000000000000000000000000000000000000", -- 0x48
      "000000000000000000000000000000000000000000", -- 0x49
      "000000000000000000000000000000000000000000", -- 0x4a
      "000000000000000000000000000000000000000000", -- 0x4b
      "000000000000000000000000000000000000000000", -- 0x4c
      "000000000000000000000000000000000000000000", -- 0x4d
      "000000000000000000000000000000000000000000", -- 0x4e
      "000000000000000000000000000000000000000000", -- 0x4f

      "000000000000000000000000000000000000000000", -- 0x50
      "000000000000000000000000000000000000000000", -- 0x51
      "000000000000000000000000000000000000000000", -- 0x52
      "000000000000000000000000000000000000000000", -- 0x53
      "000000000000000000000000000000000000000000", -- 0x54
      "000000000000000000000000000000000000000000", -- 0x55
      "000000000000000000000000000000000000000000", -- 0x56
      "000000000000000000000000000000000000000000", -- 0x57
      "000000000000000000000000000000000000000000", -- 0x58
      "000000000000000000000000000000000000000000", -- 0x59
      "000000000000000000000000000000000000000000", -- 0x5a
      "000000000000000000000000000000000000000000", -- 0x5b
      "000000000000000000000000000000000000000000", -- 0x5c
      "000000000000000000000000000000000000000000", -- 0x5d
      "000000000000000000000000000000000000000000", -- 0x5e
      "000000000000000000000000000000000000000000", -- 0x5f

      "000000000000000000000000000000000000000000", -- 0x60
      "000000000000000000000000000000000000000000", -- 0x61
      "000000000000000000000000000000000000000000", -- 0x62
      "000000000000000000000000000000000000000000", -- 0x63
      "000000000000000000000000000000000000000000", -- 0x64
      "000000000000000000000000000000000000000000", -- 0x65
      "000000000000000000000000000000000000000000", -- 0x66
      "000000000000000000000000000000000000000000", -- 0x67
      "000000000000000000000000000000000000000000", -- 0x68
      "000000000000000000000000000000000000000000", -- 0x69
      "000000000000000000000000000000000000000000", -- 0x6a
      "000000000000000000000000000000000000000000", -- 0x6b
      "000000000000000000000000000000000000000000", -- 0x6c
      "000000000000000000000000000000000000000000", -- 0x6d
      "000000000000000000000000000000000000000000", -- 0x6e
      "000000000000000000000000000000000000000000", -- 0x6f

      "000000000000000000000000000000000000000000", -- 0x70
      "000000000000000000000000000000000000000000", -- 0x71
      "000000000000000000000000000000000000000000", -- 0x72
      "000000000000000000000000000000000000000000", -- 0x73
      "000000000000000000000000000000000000000000", -- 0x74
      "000000000000000000000000000000000000000000", -- 0x75
      "000000000000000000000000000000000000000000", -- 0x76
      "000000000000000000000000000000000000000000", -- 0x77
      "000000000000000000000000000000000000000000", -- 0x78
      "000000000000000000000000000000000000000000", -- 0x79
      "000000000000000000000000000000000000000000", -- 0x7a
      "000000000000000000000000000000000000000000", -- 0x7b
      "000000000000000000000000000000000000000000", -- 0x7c
      "000000000000000000000000000000000000000000", -- 0x7d
      "000000000000000000000000000000000000000000", -- 0x7e
      "000000000000000000000000000000000000000000", -- 0x7f

      "000000000000000000000000000000000000000000", -- 0x80
      "000000000000000000000000000000000000000000", -- 0x81
      "000000000000000000000000000000000000000000", -- 0x82
      "000000000000000000000000000000000000000000", -- 0x83
      "000000000000000000000000000000000000000000", -- 0x84
      "000000000000000000000000000000000000000000", -- 0x85
      "000000000110000000010000010000000110000000", -- 0x86 - LRI2  : LRI second step
      "000000000100010000010000000010100010011111", -- 0x87 - SRI2  : Shift Reg Step 2
      "000000000100001111000000010000110010011111", -- 0x88 - SRI3  : Shift Reg Step 3
      "000000000110000000010000000000000000000000", -- 0x89 - Catch
      "000000000000000000000000000000000000000000", -- 0x8a
      "000000000000000000000000000000000000000000", -- 0x8b
      "000000000000000000000000000000000000000000", -- 0x8c
      "000000000000000000000000000000000000000000", -- 0x8d
      "000000000000000000000000000000000000000000", -- 0x8e
      "000000000000000000000000000000000000000000", -- 0x8f

      "000000000000000000000000000000000000000000", -- 0x90
      "000000000000000000000000000000000000000000", -- 0x91
      "000000000000000000000000000000000000000000", -- 0x92
      "000000000000000000000000000000000000000000", -- 0x93
      "000000000000000000000000000000000000000000", -- 0x94
      "000000000000000000000000000000000000000000", -- 0x95
      "000000000000000000000000000000000000000000", -- 0x96
      "000000000000000000000000000000000000000000", -- 0x97
      "000000000000000000000000000000000000000000", -- 0x98
      "000000000000000000000000000000000000000000", -- 0x99
      "000000000000000000000000000000000000000000", -- 0x9a
      "000000000000000000000000000000000000000000", -- 0x9b
      "000000000000000000000000000000000000000000", -- 0x9c
      "000000000000000000000000000000000000000000", -- 0x9d
      "000000000000000000000000000000000000000000", -- 0x9e
      "000000000000000000000000000000000000000000", -- 0x9f

      "000000000000000000000000000000000000000000", -- 0xa0
      "000000000000000000000000000000000000000000", -- 0xa1
      "000000000000000000000000000000000000000000", -- 0xa2
      "000000000000000000000000000000000000000000", -- 0xa3
      "000000000000000000000000000000000000000000", -- 0xa4
      "000000000000000000000000000000000000000000", -- 0xa5
      "000000000000000000000000000000000000000000", -- 0xa6
      "000000000000000000000000000000000000000000", -- 0xa7
      "000000000000000000000000000000000000000000", -- 0xa8
      "000000000000000000000000000000000000000000", -- 0xa9
      "000000000000000000000000000000000000000000", -- 0xaa
      "000000000000000000000000000000000000000000", -- 0xab
      "000000000000000000000000000000000000000000", -- 0xac
      "000000000000000000000000000000000000000000", -- 0xad
      "000000000000000000000000000000000000000000", -- 0xae
      "000000000000000000000000000000000000000000", -- 0xaf

      "000000000000000000000000000000000000000000", -- 0xb0
      "000000000000000000000000000000000000000000", -- 0xb1
      "000000000000000000000000000000000000000000", -- 0xb2
      "000000000000000000000000000000000000000000", -- 0xb3
      "000000000000000000000000000000000000000000", -- 0xb4
      "000000000000000000000000000000000000000000", -- 0xb5
      "000000000000000000000000000000000000000000", -- 0xb6
      "000000000000000000000000000000000000000000", -- 0xb7
      "000000000000000000000000000000000000000000", -- 0xb8
      "000000000000000000000000000000000000000000", -- 0xb9
      "000000000000000000000000000000000000000000", -- 0xba
      "000000000000000000000000000000000000000000", -- 0xbb
      "000000000000000000000000000000000000000000", -- 0xbc
      "000000000000000000000000000000000000000000", -- 0xbd
      "000000000000000000000000000000000000000000", -- 0xbe
      "000000000000000000000000000000000000000000", -- 0xbf

      "000000000110000010000110000000000001000000", -- 0xc0 - IF  : Instruction Fetch
      "000000000000000000011000000000000000000000", -- 0xc1 - EX0 : error exit
      "000000000000000000000000000000000000000000", -- 0xc2
      "000000000000000000000000000000000000000000", -- 0xc3
      "000000000000000000000000000000000000000000", -- 0xc4
      "000000000000000000000000000000000000000000", -- 0xc5
      "000000000000000000000000000000000000000000", -- 0xc6
      "000000000000000000000000000000000000000000", -- 0xc7
      "000000000000000000000000000000000000000000", -- 0xc8
      "000000000000000000000000000000000000000000", -- 0xc9
      "000000000000000000000000000000000000000000", -- 0xca
      "000000000000000000000000000000000000000000", -- 0xcb
      "000000000000000000000000000000000000000000", -- 0xcc
      "000000000000000000000000000000000000000000", -- 0xcd
      "000000000000000000000000000000000000000000", -- 0xce
      "000000000000000000000000000000000000000000", -- 0xcf

      "000000000000000000000000000000000000000000", -- 0xd0
      "000000000000000000000000000000000000000000", -- 0xd1
      "000000000000000000000000000000000000000000", -- 0xd2
      "000000000000000000000000000000000000000000", -- 0xd3
      "000000000000000000000000000000000000000000", -- 0xd4
      "000000000000000000000000000000000000000000", -- 0xd5
      "000000000000000000000000000000000000000000", -- 0xd6
      "000000000000000000000000000000000000000000", -- 0xd7
      "000000000000000000000000000000000000000000", -- 0xd8
      "000000000000000000000000000000000000000000", -- 0xd9
      "000000000000000000000000000000000000000000", -- 0xda
      "000000000000000000000000000000000000000000", -- 0xdb
      "000000000000000000000000000000000000000000", -- 0xdc
      "000000000000000000000000000000000000000000", -- 0xdd
      "000000000000000000000000000000000000000000", -- 0xde
      "000000000000000000000000000000000000000000", -- 0xdf

      "000000000000000000000000000000000000000000", -- 0xe0
      "000000000000000000000000000000000000000000", -- 0xe1
      "000000000000000000000000000000000000000000", -- 0xe2
      "000000000000000000000000000000000000000000", -- 0xe3
      "000000000000000000000000000000000000000000", -- 0xe4
      "000000000000000000000000000000000000000000", -- 0xe5
      "000000000000000000000000000000000000000000", -- 0xe6
      "000000000000000000000000000000000000000000", -- 0xe7
      "000000000000000000000000000000000000000000", -- 0xe8
      "000000000000000000000000000000000000000000", -- 0xe9
      "000000000000000000000000000000000000000000", -- 0xea
      "000000000000000000000000000000000000000000", -- 0xeb
      "000000000000000000000000000000000000000000", -- 0xec
      "000000000000000000000000000000000000000000", -- 0xed
      "000000000000000000000000000000000000000000", -- 0xee
      "000000000000000000000000000000000000000000", -- 0xef

      "000000000000000000000000000000000000000000", -- 0xf0
      "000000000000000000000000000000000000000000", -- 0xf1
      "000000000000000000000000000000000000000000", -- 0xf2
      "000000000000000000000000000000000000000000", -- 0xf3
      "000000000000000000000000000000000000000000", -- 0xf4
      "000000000000000000000000000000000000000000", -- 0xf5
      "000000000000000000000000000000000000000000", -- 0xf6
      "000000000000000000000000000000000000000000", -- 0xf7
      "000000000000000000000000000000000000000000", -- 0xf8
      "000000000000000000000000000000000000000000", -- 0xf9
      "000000000000000000000000000000000000000000", -- 0xfa
      "000000000000000000000000000000000000000000", -- 0xfb
      "000000000000000000000000000000000000000000", -- 0xfc
      "000000000000000000000000000000000000000000", -- 0xfd
      "000000000000000000000000000000000000000000", -- 0xfe
      "000000000000000000000000000000000000000000" -- 0xff
    );

    VARIABLE addr : INTEGER;
    VARIABLE ctrl_out : STD_LOGIC_VECTOR(41 DOWNTO 0);

  BEGIN
    addr := conv_integer(car_in(7 DOWNTO 0));
    ctrl_out := control_mem(addr);
    next_addr <= ctrl_out(41 DOWNTO 25);
    muxs_ctrl <= ctrl_out(24 DOWNTO 22);
    muxc_ctrl <= ctrl_out(21);
    instruct_ld <= ctrl_out(20);
    pc_inc <= ctrl_out(19);
    pc_ld <= ctrl_out(18);
    temp_d <= ctrl_out(17);
    temp_a <= ctrl_out(16);
    temp_b <= ctrl_out(15);
    muxb_ctrl <= ctrl_out(14);
    func_sel <= ctrl_out (13 DOWNTO 9);
    muxd_ctrl <= ctrl_out(8);
    read_write <= ctrl_out(7);
    muxm_ctrl <= ctrl_out(6);
    mem_write <= ctrl_out(5);
    reset_v <= ctrl_out(4);
    reset_c <= ctrl_out(3);
    reset_n <= ctrl_out(2);
    reset_z <= ctrl_out(1);
    flag_load <= ctrl_out(0);
  END PROCESS;
END Behavioral;